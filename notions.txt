===================

L'héritage
is a, has a
héritage unique (présentation de la classe Object)
instanceof (downcasting, upcasting)
Principe de substitution de Liskov
Les constructeurs
open/close principle
final

===================

Le polymorphisme (introduction aux annotations avec @Override)
appel à la méthode parente avec super
name shadowing pour les attributs
pas de polymorphisme pour les méthodes privées

===================

La classe Object

comparaison d'objet
toString
clone
equals
finalize

===================

La classe String

(expressions régulières)
formattage (message format et printf)

===================

Les exceptions

exception comme mécanisme de validation pour la création d'objet (exception lancée dans les constructeurs)
précondition et postconditions

introduction du mot clé assert.

===================

Les génériques

===================

Les collections
(introduction à equals et hash)

===================

classe abstraite

===================

interface

ex : Comparable pour le tri et la recherche de tableau

===================

enumération

===================

les classes internes

===================

Les dates / time

===================

Les lambdas

ex : Comparator pour le tri et la recherche de tableau

===================

stream et filter/map/reduce

ex: tableaux et collections

===================

Les entrées/sorties

===================

La reflexivité

===================

Les annotations

===================

La sérialisation

===================

La concurrence

===================

swing

===================

les tests

===================

programmation native

===================

javadoc

===================

javabeans

===================

class loader

===================

Les fichier Properties
