===================

Les exceptions

introduction du mot clé assert.

===================

Les génériques

* utiliser des génériques (la notation en diamand pour l'initialisation)
* Les règles de typage pour l'affectation et les paramètres (ArrayList<T> -> ArrayList<V>)
* écrire des méthodes génériques (paramètres et type de retour)
* écrire des classes génériques
* Bounded type <T extends XXX> <T super XXX>
* ? le caractère générique
* Limitation : instanceof, pas d'instanciation générique


===================

Les collections
(introduction à equals et hash)

* ArrayList, LinkedList, List et Collection (le cas Vector)
* HashMap, TreeMap, Map (parcourir des maps)
* HashSet, Set
* java.util.Collections

===================

classe abstraite (DONE)

===================

interface /!\

inversion de dépendance

ex : Comparable pour le tri et la recherche de tableau

===================

enumération (DONE)

===================

les classes internes & classes anonymes /!\

===================

Les dates / time

===================

Les lambdas

ex : Comparator pour le tri et la recherche de tableau

===================

stream et filter/map/reduce

ex: tableaux et collections

===================

Les entrées/sorties

===================

La réflexivité

===================

Les annotations

===================

La sérialisation

===================

La concurrence

===================

swing

===================

les tests

===================

programmation native

===================

javadoc

===================






javabeans

===================

class loader

===================

Les fichier Properties
